name: Build Development Branch

on:
  # Triggers only for the feature/ branches
  push:
    branches: [ 'development' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    environment: development
    outputs:
      container_digest: ${{ steps.container_info.outputs.container_digest }}

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        #run: docker build . --file Dockerfile --tag ghcr.io/toddysm/flask-sample:$(date +'%Y-%m-%d')
        run: docker build . --file Dockerfile --tag ghcr.io/toddysm/flask-sample:latest

      - name: Login to the Container Registry  
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_CLIENT_SECRET }}
      
      - name: Push Image to Registry
        #run: docker push ghcr.io/toddysm/flask-sample:$(date +'%Y-%m-%d')
        run: docker push ghcr.io/toddysm/flask-sample:latest

      # - name: Get Container Digest
      #   id: container_info
      #   run: |
      #     export CONTAINER_DIGEST=$(docker image inspect ghcr.io/toddysm/flask-sample:$(date +'%Y-%m-%d') | jq .[0].Id)
      #     echo $CONTAINER_DIGEST
      #     echo "::set-output name=container_digest::$CONTAINER_DIGEST"

  provenance:
    name: provenance
    runs-on: ubuntu-latest
    needs: [build]
    environment: development

    steps:
      - name: Login to the Container Registry  
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_CLIENT_SECRET }}

      - name: Install Skopeo
        run: sudo apt-get update && sudo apt-get -y install skopeo
      
      - name: Get Image Digest
        id: get_image_digest
        run: |
          #export CONTAINER_DIGEST=$(skopeo inspect docker://ghcr.io/toddysm/flask-sample:$(date +'%Y-%m-%d') | jq .Digest)
          echo ::set-output name=docker_digest::$(skopeo inspect docker://ghcr.io/toddysm/flask-sample:latest | jq .Digest)
          echo $CONTAINER_DIGEST

      - name: Generate Provenance for Container
        uses: philips-labs/slsa-provenance-action@v0.7.2
        with:
          command: generate
          subcommand: container
          #arguments: --repository ghcr.io/toddysm/flask-sample --output-path provenance.att --digest ${{ needs.build.outputs.container_digest }} --tags $(date +'%Y-%m-%d')
          #arguments: --repository ghcr.io/toddysm/flask-sample --output-path provenance.att --digest $CONTAINER_DIGEST --tags $(date +'%Y-%m-%d')
          arguments: --repository ghcr.io/toddysm/flask-sample --output-path provenance.att --digest ${{ steps.get_image_digest.outputs.docker_digest }}

      - name: Show Provenance for Container
        run: cat provenance.att