name: Build Feature Branch

on:
  # Triggers only for the feature/ branches
  push:
    branches: [ 'feature/**' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.ACR_LOGIN_SERVER }}/flask-sample:$(date +'%Y-%m-%d')

      - name: Get Docker content maniefest
        run: docker inspect ${{ secrets.ACR_LOGIN_SERVER }}/flask-sample:$(date +'%Y-%m-%d') > inspect.json
      
      - name: Prepare Python environment
        run: pip install -r ./utils/requirements.txt

      - name: Login to the Container Registry  
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_CLIENT_ID }}
          password: ${{ secrets.ACR_CLIENT_SECRET }}
      
      - name: Push Image to ACR
        run: docker push ${{ secrets.ACR_LOGIN_SERVER }}/flask-sample:$(date +'%Y-%m-%d')

  provenance:
    name: provenance
    runs-on: ubuntu-latest
    needs: [build]
    environment: development

    steps:
      - name: Install Skopeo
        run: sudo apt-get update && sudo apt-get -y install skopeo
      
      - name: Install ORAS
        run: |
            curl -LO https://github.com/oras-project/oras/releases/download/v0.2.1-alpha.1/oras_0.2.1-alpha.1_linux_amd64.tar.gz
            mkdir -p oras-install/ 
            tar -zxf oras_0.2.*.tar.gz -C oras-install/ 
            mv oras-install/oras /usr/local/bin/ 
            rm -rf oras_0.2.*.tar.gz oras-install/

      - name: Login to the Container Registry  
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_CLIENT_ID }}
          password: ${{ secrets.ACR_CLIENT_SECRET }}

      - name: Get Image Digest
        id: get_image_digest
        run: |
          echo ::set-output name=docker_digest::$(skopeo inspect docker://${{ secrets.ACR_LOGIN_SERVER }}/flask-sample:$(date +'%Y-%m-%d') | jq .Digest)

      - name: Generate Provenance for Container
        uses: philips-labs/slsa-provenance-action@v0.7.2
        with:
          command: generate
          subcommand: container
          arguments: --repository ${{ secrets.ACR_LOGIN_SERVER }}/flask-sample --output-path ./provenance.json --digest ${{ steps.get_image_digest.outputs.docker_digest }} --tags "$(date +'%Y-%m-%d')"

      - name: Print Provenance Details
        run: |
          cat ./provenance.json

      - name: Generate Annotation File
        run: |
          echo \
          '''{
              "$manifest": {
                "io.azurecr.image.author": "${{ github.actor }}",
                "io.azurecr.image.commit-sha": "${{ github.sha }}", 
                "io.azurecr.image.repository": "${{ github.repository }}" 
              }
            }''' > ./annotations.json

      - name: Push Provenance to the Registry
        run: |
          oras push ${{ secrets.ACR_LOGIN_SERVER }}/flask-sample \
          --artifact-type 'application/slsa+json' \
          --subject ${{ secrets.ACR_LOGIN_SERVER }}/flask-sample:$(date +'%Y-%m-%d') \
          --manifest-annotations ./annotations.json \
          ./provenance.json:application/json

  upload:
    name: upload
    runs-on: ubuntu-latest
    needs: [provenance]
    environment: development

    steps:
      - name: Install ORAS
        run: oras --help
