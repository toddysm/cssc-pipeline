name: Build Feature Branch

on:
  # Triggers only for the feature/ branches
  push:
    branches: [ 'feature/**' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v3

      - name: Install ORAS
        run: |
            curl -LO https://github.com/oras-project/oras/releases/download/v1.0.0/oras_1.0.0_linux_amd64.tar.gz
            mkdir -p oras-install/ 
            tar -zxf oras_*.tar.gz -C oras-install/ 
            mv oras-install/oras /usr/local/bin/ 
            rm -rf oras_*.tar.gz oras-install/

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag ghcr.io/toddysm/flask-sample:$(date +'%Y-%m-%d')

      - name: Get Docker Content Manifest
        run: docker inspect ghcr.io/toddysm/flask-sample:$(date +'%Y-%m-%d') > inspect.json
      
      - name: Prepare Python Environment
        run: pip install -r ./utils/requirements.txt
      
      - name: Annotate Layers
        run: |
          python ./utils/layer_annotate.py \
          -d ./Dockerfile \
          -c ./inspect.json \
          -o ${{ github.actor }} \
          -s ${{ github.sha }} \
          -r ${{ github.repository }} \
          -f ./ownership.json

      - name: Print Layer Annotations
        run: cat ./ownership.json

      - name: Login to the Container Registry  
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_CLIENT_SECRET }}
      
      - name: Push Image to Registry
        run: docker push ghcr.io/toddysm/flask-sample:$(date +'%Y-%m-%d')

      - name: Push Ownership to the Registry
        run: |
          oras attach -d \
          --artifact-type 'application/vnd.toddysm.ownership+json' \
          ghcr.io/toddysm/flask-sample:$(date +'%Y-%m-%d') \
          ./ownership.json:application/json

  provenance:
    name: provenance
    runs-on: ubuntu-latest
    needs: [build]
    environment: development

    steps:
      - name: Install Skopeo
        run: sudo apt-get update && sudo apt-get -y install skopeo
      
      - name: Install ORAS
        run: |
            curl -LO https://github.com/oras-project/oras/releases/download/v1.0.0/oras_1.0.0_linux_amd64.tar.gz
            mkdir -p oras-install/ 
            tar -zxf oras_*.tar.gz -C oras-install/ 
            mv oras-install/oras /usr/local/bin/ 
            rm -rf oras_*.tar.gz oras-install/

      - name: Login to the Container Registry  
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_CLIENT_SECRET }}

      - name: Get Image Digest
        id: get_image_digest
        run: |
          echo ::set-output name=docker_digest::$(skopeo inspect docker://ghcr.io/toddysm/flask-sample:$(date +'%Y-%m-%d') | jq .Digest)

      - name: Generate SLSA Provenance for Container
        uses: philips-labs/slsa-provenance-action@v0.7.2
        with:
          command: generate
          subcommand: container
          arguments: --repository ghcr.io/toddysm/flask-sample --output-path ./provenance.json --digest ${{ steps.get_image_digest.outputs.docker_digest }} --tags "$(date +'%Y-%m-%d')"

      - name: Print Provenance Details
        run: |
          cat ./provenance.json

      - name: Generate Annotation File
        run: |
          echo \
          '''{
              "$manifest": {
                "io.azurecr.image.author": "${{ github.actor }}",
                "io.azurecr.image.commit-sha": "${{ github.sha }}", 
                "io.azurecr.image.repository": "${{ github.repository }}" 
              }
            }''' > ./annotations.json

      - name: Push SLSA Provenance to the Registry
        run: |
          oras attach -d \
          --artifact-type 'application/slsa+json' \
          --annotation-file ./annotations.json \
          ghcr.io/toddysm/flask-sample:$(date +'%Y-%m-%d') \
          ./provenance.json:application/json